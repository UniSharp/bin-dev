#!/bin/bash

if [ $UID == "root" ]; then
    echo "ERROR: Superuser is not allowed." >&2
    exit 1
fi

if [ -z $1 ]; then
    echo "ERROR: Missing project name" >&2
    exit 1
fi


if [ -e $1 ]; then
    echo "ERROR: $1 already exists" >&2
    exit 1
fi

if [ ! `which yarn` ]; then
    echo "ERROR: yarn command not found" >&2
    exit 1
fi

PRJ=$1

vue init nuxt/starter $PRJ
cd $PRJ
yarn
yarn add \
     sass-loader \
     node-sass \
     bootstrap@4.0.0-beta \
     debug \
     axios \
     pug \
     @nuxtjs/font-awesome \
     @nuxtjs/bootstrap-vue \
     nuxt@1.0.0-rc6


yarn add --dev \
     stylelint \
     stylelint-config-standard \
     stylelint-processor-html \
     stylelint-webpack-plugin

mkdir -p assets/scss
touch assets/scss/global.scss

cp node_modules/bootstrap/scss/_functions.scss assets/scss/functions.scss
sed 's/ !default//g' node_modules/bootstrap/scss/_variables.scss > assets/scss/variables.scss

sed -i 's#.*#// &#' assets/scss/functions.scss
sed -i 's#.*#// &#' assets/scss/variables.scss

rm -f components/Logo.vue

cat > layouts/default.vue <<EOF
<template lang="pug">
  .container-fluid.clearfix
    sidebar.float-left
    div
      navbar
      nuxt
</template>

<script>
  import Navbar from '~/components/Navbar.vue'
  import Sidebar from '~/components/Sidebar.vue'

  export default {
    components: {
      Navbar,
      Sidebar
    }
  }
</script>

<style lang="scss">
  @import "assets/scss/functions";
  @import "assets/scss/variables";
  @import "node_modules/bootstrap/scss/bootstrap";
</style>
EOF


cat > pages/index.vue <<EOF
<template lang="pug">
  .row
    .col-12
      h1 Hello world!
</template>

<script>
  export default {
    components: {
    }
  }
</script>

<style lang="scss" scoped>
</style>
EOF

cat > nuxt.config.js <<EOF
const StylelintPlugin = require('stylelint-webpack-plugin')

module.exports = {
  /*
  ** Headers of the page
  */
  head: {
    title: '{{ name }}',
    meta: [
      { charset: 'utf-8' },
      { name: 'viewport', content: 'width=device-width, initial-scale=1' },
      { hid: 'description', name: 'description', content: '{{ description }}' }
    ],
    link: [
      { rel: 'icon', type: 'image/x-icon', href: '/favicon.ico' }
    ]
  },
  /*
  ** Customize the progress-bar color
  */
  loading: { color: '#3B8070' },
  /*
  ** Global css
  */
  css: [
    { src: '~/assets/scss/global.scss', lang: 'scss' }
  ],
  /*
  ** Build configuration
  */
  build: {
    /*
    ** Run ESLINT and STYLELINT on save
    */
    extend (config, ctx) {
      if (ctx.dev && ctx.isClient) {
        config.module.rules.push({
          enforce: 'pre',
          test: /\.(js|vue)\$/,
          loader: 'eslint-loader',
          exclude: /(node_modules)/
        })

        config.plugins.push(new StylelintPlugin({
          files: ['**/*.scss', '**/*.vue'],
          syntax: 'scss'
        }))
      }
    }
  },
  modules: [
    '@nuxtjs/font-awesome',
    ['@nuxtjs/bootstrap-vue', { css: false }]
  ]
}
EOF



cat > .stylelintrc <<EOF
{
  "processors": ["stylelint-processor-html"],
  "extends": "stylelint-config-standard",
  "defaultSeverity": "error",
  "rules": {
    "selector-list-comma-newline-after": null,
    "number-leading-zero": "never",
    "selector-pseudo-element-colon-notation": "single",
    "no-empty-source": null,
    "at-rule-no-unknown": [true, {
      "ignoreAtRules": ["include", "mixin", "each", "extend"]
    }]
  }
}
EOF


cat > components/Navbar.vue <<EOF
<template lang="pug">
  b-navbar(toggleable='md', variant='light')
    b-nav-toggle(target='nav_collapse')
    b-navbar-brand(href='#') NavBar
    b-collapse#nav_collapse(is-nav='')
      b-nav(is-nav-bar='')
        b-nav-item(href='#') Link
        b-nav-item(href='#', disabled='') Disabled
      // Right aligned nav items
      b-nav.ml-auto(is-nav-bar='')
        b-nav-form
          b-form-input.mr-sm-2(size='sm', type='text', placeholder='Search')
            b-button.my-2.my-sm-0(size='sm', type='submit') Search
        b-nav-item-dropdown(text='Lang', right='')
          b-dropdown-item(href='#') EN
          b-dropdown-item(href='#') ES
          b-dropdown-item(href='#') RU
          b-dropdown-item(href='#') FA
        b-nav-item-dropdown(right='')
          // Using button-content slot
          template(slot='button-content')
            em User
          b-dropdown-item(href='#') Profile
          b-dropdown-item(href='#') Signout
</template>

<style lang="scss" scoped>
</style>
EOF

cat > components/Sidebar.vue <<EOF
<template lang="pug">
  nav.d-none.d-sm-block.bg-light.sidebar.pt-3
    h3 Backend
    ul.nav.nav-pills.flex-column.my-3
      li.nav-item
        a.nav-link.active(href='#')
          | Overview
          span.sr-only (current)
      li.nav-item
        a.nav-link(href='#') Reports
      li.nav-item
        a.nav-link(href='#') Analytics
      li.nav-item
        a.nav-link(href='#') Export
    ul.nav.nav-pills.flex-column.my-3
      li.nav-item
        a.nav-link(href='#') Nav item
      li.nav-item
        a.nav-link(href='#') Nav item again
      li.nav-item
        a.nav-link(href='#') One more nav
      li.nav-item
        a.nav-link(href='#') Another nav item
    ul.nav.nav-pills.flex-column.my-3
      li.nav-item
        a.nav-link(href='#') Nav item again
      li.nav-item
        a.nav-link(href='#') One more nav
      li.nav-item
        a.nav-link(href='#') Another nav item
</template>

<style lang="scss" scoped>
  .sidebar {
    width: 200px;
  }
</style>
EOF

cd -


echo "--------------------------"
echo " $PRJ created."
echo "--------------------------"
exit 0
